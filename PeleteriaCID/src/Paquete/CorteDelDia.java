/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paquete;

import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gloria
 */
public class CorteDelDia extends javax.swing.JFrame {

    /**
     * Creates new form CorteDelDia
     */
    
    DefaultTableModel modelo=new DefaultTableModel();
    DefaultTableModel modelo1=new DefaultTableModel();
    String realizo;
    public CorteDelDia(String Realizo) {
        initComponents();
        LlenaCombo();
        this.realizo=Realizo;
        lblRealizo.setText(realizo);
        System.out.println("Realiza: "+realizo);
        modelo.addColumn("ID");
        modelo.addColumn("Total");
        modelo.addColumn("Fecha");
        modelo.addColumn("Método de pago");
        tblTabla.setModel(modelo);
        ResultSet rs;
        Statement st;
        String[] datos=new String[4];
        try{
        Date fecha = new Date();
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date utilDate = new SimpleDateFormat("dd-MM-yyyy").parse(dateFormat.format(fecha));
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        String sql=("SELECT * FROM peleteriacid.pedidos "
            +"WHERE PEDIDO_FECHA = '"+sqlDate+"';");
        
            
            System.out.println(sql);
            st=cn.createStatement();
                rs=st.executeQuery(sql);
                System.out.println(sql);

                while (rs.next()){
                    datos[0]=Integer.toString(rs.getInt(1));
                    datos[1]=Double.toString(rs.getDouble(2));
                    datos[2]=dateFormat.format(rs.getDate(3));
                    datos[3]=rs.getString(4);
                    modelo.addRow(datos);
                }

                tblTabla.setModel(modelo);
                rs.close();
            

        }catch(SQLException ex){
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ParseException ex) {
        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
    }
        modelo1.addColumn("Concepto");
        modelo1.addColumn("Tipo");
        modelo1.addColumn("Monto");
        modelo1.addColumn("Descripcion");
        modelo1.addColumn("Total");
        tblGastos.setModel(modelo1);
    }
    private void LlenaCombo(){
        String sql="SELECT * FROM peleteriacid.gastos WHERE GASTO_PAGADO = 'Sí';";
        ResultSet rs;
        Statement st;
        try{
            st=cn.createStatement();
            rs=st.executeQuery(sql);
            
            while (rs.next()){
                
                String ClaveInst=rs.getString(2);
                cmbGastos.addItem(ClaveInst);
            }
        }catch(SQLException ex){
            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Quitar = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        Info = new javax.swing.JMenuItem();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        btnCorte = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGastos = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        cmbGastos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMateriales = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lblRealizo = new javax.swing.JLabel();

        Quitar.setText("Quitar");
        Quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Quitar);

        Info.setText("Mas información...");
        Info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoActionPerformed(evt);
            }
        });
        jPopupMenu2.add(Info);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 204));
        jLabel9.setText("CORTE DEL DIA");

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTabla.setComponentPopupMenu(jPopupMenu2);
        jScrollPane1.setViewportView(tblTabla);

        btnCorte.setText("Hacer corte del dia");
        btnCorte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorteActionPerformed(evt);
            }
        });

        jLabel1.setText("Pedidos del dia:");

        jLabel2.setText("Gastos:");

        tblGastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblGastos.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(tblGastos);

        cmbGastos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Agregar gasto>" }));
        cmbGastos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGastosActionPerformed(evt);
            }
        });

        jLabel3.setText("Realiza:");

        tblMateriales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblMateriales);

        jLabel4.setText("Informacion del pedido:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 287, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblRealizo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCorte))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(185, 185, 185)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(432, 432, 432)
                                        .addComponent(jLabel4))))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(cmbGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cmbGastos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRealizo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCorte, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorteActionPerformed
            
        int rows=modelo.getRowCount(), i=0;
            int rows1=modelo1.getRowCount();
            
            Double Total=0.0, Monto=0.0, Ganancias=0.0;
            String[] Conceptos=new String [rows1];
            Double[] Montos=new Double [rows1];
            int[] IDs=new int [rows];
            while(i<rows1){
                String concepto=tblGastos.getValueAt(i, 0).toString();
                Conceptos[i]=concepto;
                Monto+=Double.parseDouble(tblGastos.getValueAt(i, 4).toString());
                i++;
            }
            
            
            
            i=0;
            while(i<rows){
                int ID=Integer.parseInt(tblTabla.getValueAt(i, 0).toString());
                            ResultSet rs;
                            Statement st;
                            int Materia=0, Cantidad=0;
                            double Totales=0.0, Gananciass=0.0;
                            DefaultTableModel modelito=new DefaultTableModel();
                            modelito.addColumn("SKU");
                            modelito.addColumn("Tipo");
                            modelito.addColumn("Modelo");
                            modelito.addColumn("Color");
                            modelito.addColumn("Cantidad vendida");
                            modelito.addColumn("Total");
                            modelito.addColumn("Ganancia");
                            tblMateriales.setModel(modelito);
                            try{
                            String sql=("SELECT * FROM peleteriacid.materiales_has_pedidos "
                                +"WHERE PEDIDO_ID = '"+ID+"';");
                            st=cn.createStatement();
                            rs=st.executeQuery(sql);
                            String[] datos=new String[7];
                            while (rs.next()){
                                Materia=rs.getInt(2);
                                Cantidad=rs.getInt(3);
                                Totales=(rs.getDouble(4));
                                Gananciass=(rs.getDouble(5));
                                String sql2="SELECT MATERIA_SKU, MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR FROM peleteriacid.materiales WHERE MATERIA_ID = "+Materia+";";
                                ResultSet rs2;
                                Statement st2;

                                    st2=cn.createStatement();
                                    rs2=st2.executeQuery(sql2);
                                    while (rs2.next()){
                                        datos[0]=rs2.getString(1);
                                        datos[1]=rs2.getString(2);
                                        datos[2]=rs2.getString(3);
                                        datos[3]=rs2.getString(4);
                                        datos[4]=String.valueOf(Cantidad);
                                        datos[5]=String.valueOf(Totales);
                                        datos[6]=String.valueOf(Gananciass);
                                        modelito.addRow(datos);
                                    }
                                    rs2.close();
                                    tblMateriales.setModel(modelito);
                            }
                            rs.close();
                        }catch(SQLException ex){
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                            int rows2=modelito.getRowCount();
                            int j=0;
                            while(j<rows2){
                                Ganancias+=Double.parseDouble(tblMateriales.getValueAt(j, 6).toString());
                                j++;
                            }
                IDs[i]=Integer.parseInt(tblTabla.getValueAt(i, 0).toString());
                Total+=Double.parseDouble(tblTabla.getValueAt(i, 1).toString());
                System.out.println(Total);
                i++;
                
            }
            
        try{
        Date fecha = new Date();
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date utilDate = new SimpleDateFormat("dd-MM-yyyy").parse(dateFormat.format(fecha));
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
        PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.cortecaja_dias(CORTEDIA_FECHA, CORTEDIA_INGRESOS, CORTEDIA_EGRESOS, CORTEDIA_MONTOTOTAL, CORTEDIA_REALIZO, CORTEDIA_GANANCIAS)"
            +" VALUES ( ?, ?, ?, ?, ?, ?);");
        pst.setDate(1, sqlDate);
        pst.setDouble(2, Total);
        pst.setDouble(3, Monto);
        pst.setDouble(4, Total-Monto);
        pst.setString(5, realizo);
        pst.setDouble(6, Ganancias);
        System.out.println(pst);
        pst.executeUpdate();
        }catch(SQLException ex){
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ParseException ex) {
        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
    }
        i=0;
            while(i<rows1){
                String GastoID="";
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[1];
                sql="SELECT GASTOS_ID"
                + " FROM peleteriacid.gastos WHERE GASTOS_CONCEPTO = '"+Conceptos[i]+"';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        GastoID=Integer.toString(rs.getInt(1));
                    }
                    rs.close();
                    System.out.println("Id del gasto con el concepto "+Conceptos[i]+" es: "+GastoID);
                }catch(SQLException ex){
                        Logger.getLogger(RegistrarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
                int ID=Integer.parseInt(GastoID);
                try{                   
                    PreparedStatement pst1=cn.prepareStatement("UPDATE peleteriacid.gastos "
                    +"SET GASTO_PAGADO = 'Listado'"
                    +" WHERE GASTOS_ID = "+GastoID
                    +";");
                    System.out.println(pst1);
                    pst1.executeUpdate();
                }catch(SQLException ex){
                    Logger.getLogger(RegistrarVenta.class.getName()).log(Level.SEVERE, null, ex);

                }
                try{
                    Date fecha = new Date();
                    DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                    Date utilDate = new SimpleDateFormat("dd-MM-yyyy").parse(dateFormat.format(fecha));
                    java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.cortecaja_dias_has_gastos(CORTEDIA_FECHA, GASTOS_ID)"
                      +" VALUES ( ?, ?);");
                pst.setDate(1, sqlDate);
                pst.setInt(2, ID);
                System.out.println(pst);
                pst.executeUpdate();
                }catch(SQLException ex){
                    Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                }catch (ParseException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                i++;
            }
            i=0;
            while(i<rows){
                try{
                    Date fecha = new Date();
                    DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                    Date utilDate = new SimpleDateFormat("dd-MM-yyyy").parse(dateFormat.format(fecha));
                    java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.pedidos_has_cortecaja_dias(PEDIDO_ID,CORTEDIA_FECHA)"
                      +" VALUES ( ?, ?);");
                pst.setInt(1, IDs[i]);
                pst.setDate(2, sqlDate);
                System.out.println(pst);
                pst.executeUpdate();
                }catch(SQLException ex){
                    Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                }catch (ParseException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                i++;
            }
            JOptionPane.showMessageDialog(this, "Corte del día generado");
    }//GEN-LAST:event_btnCorteActionPerformed

    private void QuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarActionPerformed
        int row=tblGastos.getSelectedRow();
        if(row>=0){
            modelo1.removeRow(row);
        }else{
            JOptionPane.showMessageDialog(null, "No seleccionó ninguna fila");
        }
    }//GEN-LAST:event_QuitarActionPerformed

    private void cmbGastosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGastosActionPerformed
        String Concepto=cmbGastos.getSelectedItem().toString();
        String Tipo="", Descripcion="", Monto="";
        String sql;
        String[] datos=new String[5];
                ResultSet rs;
                Statement st;
                sql="SELECT GASTOS_TIPO, GASTOS_MONTO, GASTOS_DESCRIPCION, GASTO_TOTAL"
                + " FROM peleteriacid.gastos WHERE GASTOS_CONCEPTO = '"+Concepto+"';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        datos[0]=Concepto;
                        datos[1]=rs.getString(1);
                        datos[2]=String.valueOf(rs.getDouble(2));
                        datos[3]=rs.getString(3);
                        datos[4]=String.valueOf(rs.getDouble(4));
                    }
                    rs.close();
                    modelo1.addRow(datos);
                    tblGastos.setModel(modelo1);
                }catch(SQLException ex){
                        Logger.getLogger(RegistrarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_cmbGastosActionPerformed

    private void InfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoActionPerformed
        int row=tblTabla.getSelectedRow();
        if(row>=0){
            int ID=Integer.parseInt(tblTabla.getValueAt(row, 0).toString());
            ResultSet rs;
            Statement st;
            int Materia=0, Cantidad=0;
            double Total=0.0, Ganancia=0.0;
            DefaultTableModel modelito=new DefaultTableModel();
            modelito.addColumn("SKU");
            modelito.addColumn("Tipo");
            modelito.addColumn("Modelo");
            modelito.addColumn("Color");
            modelito.addColumn("Cantidad vendida");
            modelito.addColumn("Total");
            modelito.addColumn("Ganancia");
            tblMateriales.setModel(modelito);
            try{
            String sql=("SELECT * FROM peleteriacid.materiales_has_pedidos "
                +"WHERE PEDIDO_ID = '"+ID+"';");
            st=cn.createStatement();
            rs=st.executeQuery(sql);
            String[] datos=new String[7];
            while (rs.next()){
                Materia=rs.getInt(2);
                Cantidad=rs.getInt(3);
                Total=(rs.getDouble(4));
                Ganancia=(rs.getDouble(5));
                String sql2="SELECT MATERIA_SKU, MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR FROM peleteriacid.materiales WHERE MATERIA_ID = "+Materia+";";
                ResultSet rs2;
                Statement st2;
                
                    st2=cn.createStatement();
                    rs2=st2.executeQuery(sql2);
                    while (rs2.next()){
                        datos[0]=rs2.getString(1);
                        datos[1]=rs2.getString(2);
                        datos[2]=rs2.getString(3);
                        datos[3]=rs2.getString(4);
                        datos[4]=String.valueOf(Cantidad);
                        datos[5]=String.valueOf(Total);
                        datos[6]=String.valueOf(Ganancia);
                        modelito.addRow(datos);
                    }
                    rs2.close();
                    tblMateriales.setModel(modelito);
            }
            rs.close();
        }catch(SQLException ex){
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            JOptionPane.showMessageDialog(null, "No seleccionó ninguna fila");
        }
    }//GEN-LAST:event_InfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CorteDelDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CorteDelDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CorteDelDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CorteDelDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Info;
    private javax.swing.JMenuItem Quitar;
    private javax.swing.JButton btnCorte;
    private javax.swing.JComboBox<String> cmbGastos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblRealizo;
    private javax.swing.JTable tblGastos;
    private javax.swing.JTable tblMateriales;
    private javax.swing.JTable tblTabla;
    // End of variables declaration//GEN-END:variables
Conectar cc=new Conectar();
Connection cn=cc.conexion();
}
