/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paquete;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Gloria
 */
public class AjustesAviso extends javax.swing.JFrame {

    /**
     * Creates new form AjustesAviso
     */
    public AjustesAviso() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        AjustaAviso = new javax.swing.JMenuItem();
        AjusteMayoreo = new javax.swing.JMenuItem();
        cmbTipo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        AjustaAviso.setText("Ajustar valor del aviso");
        AjustaAviso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjustaAvisoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(AjustaAviso);

        AjusteMayoreo.setText("Ajustar valor mínimo de mayoreo");
        AjusteMayoreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjusteMayoreoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(AjusteMayoreo);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de Material", "Agujas", "Agujetas", "Aseo", "Brochas y cepillos", "Carretes", "Cerco", "Cierres", "Clavos y tachuelas", "Correas y látigos", "Cámara de avión", "Fibras", "Grasas y ceras", "Hebillas y adornos", "Herramienta", "Hilos", "Lijas", "Pegamento", "Piel", "Pinturas", "Plantillas y taloneras", "Remaches", "Suelas", "Tacones", "Tapas y Firmes", "Tapetes", "Tintas" }));
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });
        cmbTipo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbTipoPropertyChange(evt);
            }
        });

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLista.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(tblLista);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 102));
        jLabel9.setText("AJUSTES DE AVISO DE EXISTENCIAS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(220, 220, 220))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 769, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        int Tipo=cmbTipo.getSelectedIndex();
        switch (Tipo){
            case 1:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Agujas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 2:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Agujetas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 13:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Hebillas y adornos';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 19:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Pinturas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 25:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Tapetes';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 8:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Clavos y tachuelas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 23:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Tacones';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 9:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Correas y látigos';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 21:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Remaches';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 22:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Suelas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 24:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Tapas y firmes';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 12:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Grasas y ceras';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 26:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Tintas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 20:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Plantillas y taloneas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 15:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Hilos';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 18:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Piel';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 10:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Cámara de avión';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 17:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Pegamento';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 7:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Cierres';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 4:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Brochas y cepillos';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 11:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Fibras';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 14:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Herramienta';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 6:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Cerco';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 16:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Lijas';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 5:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Carretes';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            case 3:{
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("Modelo");
                modelo.addColumn("Existencia");
                modelo.addColumn("Color");
                modelo.addColumn("Precio Unitario");
                modelo.addColumn("Costo Unitario");
                tblLista.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[6];
                sql="SELECT MATERIA_SKU, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_COLOR, MATERIA_PRECIO, MATERIA_COSTO"
                + " FROM peleteriacid.materiales WHERE MATERIA_TIPO = 'Aseo';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);

                    while (rs.next()){
                        
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=Integer.toString(rs.getInt(3));
                        datos[3]=rs.getString(4);
                        datos[4]=Double.toString(rs.getDouble(5));
                        datos[5]=Double.toString(rs.getDouble(6));
                        modelo.addRow(datos);
                    }
                    tblLista.setModel(modelo);
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;}
            default:{
                //Lista();
                break;
            }
        }
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void cmbTipoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbTipoPropertyChange

    }//GEN-LAST:event_cmbTipoPropertyChange

    private void AjustaAvisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjustaAvisoActionPerformed
        int fila = tblLista.getSelectedRow();
        
        if(fila>=0){
            String SKU=tblLista.getValueAt(fila, 0).toString();
            int canti=Integer.parseInt(JOptionPane.showInputDialog(null, "El aviso de existencia aparecera cuando el producto tenga menos de ___ unidades", "Cantidad", 
            JOptionPane.WARNING_MESSAGE));
                try{
                        PreparedStatement pst1=cn.prepareStatement("UPDATE peleteriacid.materiales "
                            +"SET MATERIA_AVISOLIMITE = "+canti+" WHERE MATERIA_SKU = '"+SKU
                            +"';");
                        System.out.println(pst1);
                        pst1.executeUpdate();
                    }catch(SQLException ex){
                        Logger.getLogger(AjustesAviso.class.getName()).log(Level.SEVERE, null, ex);

                    }
            
        }else{
            JOptionPane.showMessageDialog(null, "No seleccionó ninguna fila");
        }
    }//GEN-LAST:event_AjustaAvisoActionPerformed

    private void AjusteMayoreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjusteMayoreoActionPerformed
        int fila = tblLista.getSelectedRow();
        
        if(fila>=0){
            String SKU=tblLista.getValueAt(fila, 0).toString();
            int canti=Integer.parseInt(JOptionPane.showInputDialog(null, "El producto adoptara su valor de venta en mayoreo cuando tenga al menos ___ unidades", "Cantidad", 
            JOptionPane.WARNING_MESSAGE));
                try{
                        PreparedStatement pst1=cn.prepareStatement("UPDATE peleteriacid.materiales "
                            +"SET MATERIA_CANT_MAYOREO = "+canti+" WHERE MATERIA_SKU = '"+SKU
                            +"';");
                        System.out.println(pst1);
                        pst1.executeUpdate();
                    }catch(SQLException ex){
                        Logger.getLogger(AjustesAviso.class.getName()).log(Level.SEVERE, null, ex);

                    }
            
        }else{
            JOptionPane.showMessageDialog(null, "No seleccionó ninguna fila");
        }
    }//GEN-LAST:event_AjusteMayoreoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjustesAviso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjustesAviso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjustesAviso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjustesAviso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AjustesAviso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AjustaAviso;
    private javax.swing.JMenuItem AjusteMayoreo;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblLista;
    // End of variables declaration//GEN-END:variables
Conectar cc=new Conectar();
Connection cn=cc.conexion();
}
