/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paquete;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gloria
 */
public class EditarGasto extends javax.swing.JFrame {

    /**
     * Creates new form EditarGasto
     */
    
    
    public void LimpiarCampos(){
        txtConcepto.setText("");
        txtMonto.setText("");
        txtDescripcion.setText("");
        cmbTipo.setSelectedIndex(0);
        cmbMetodo.setSelectedIndex(0);
        txtTotal.setText("");
        dateGastos.setCalendar(null);
        chkIVA.setSelected(false);
        cmbPagado.setSelectedIndex(0);
    }
    
    public EditarGasto() {
        initComponents();
        Listar();
        LimpiarCampos();
        LlenaCombo();
    }
     private void LlenaCombo(){
        String sql="SELECT * FROM peleteriacid.proveedores WHERE PROV_TIPO = 'Servicios';";
        ResultSet rs;
        Statement st;
        try{
            st=cn.createStatement();
            rs=st.executeQuery(sql);
            
            while (rs.next()){
                
                String ClaveInst=rs.getString(2);
                cmbProveedores.addItem(ClaveInst);
            }
        }catch(SQLException ex){
            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    public void Listar(){
        DefaultTableModel modelo1=new DefaultTableModel();
        modelo1.addColumn("Concepto");
        modelo1.addColumn("Tipo");
        modelo1.addColumn("Monto");
        modelo1.addColumn("Descripcion");
        
        tblGastos.setModel(modelo1);
        try{
            ResultSet rs;
        Statement st;
        String[] datos=new String[4];
        String sql=("SELECT GASTOS_CONCEPTO, GASTOS_TIPO, GASTOS_MONTO, GASTOS_DESCRIPCION FROM peleteriacid.gastos;");
        
            
            System.out.println(sql);
            st=cn.createStatement();
                rs=st.executeQuery(sql);
                System.out.println(sql);

                while (rs.next()){
                    datos[0]=rs.getString(1);
                    datos[1]=rs.getString(2);
                    datos[2]=Double.toString(rs.getDouble(3));
                    datos[3]=rs.getString(4);
                    modelo1.addRow(datos);
                }

                tblGastos.setModel(modelo1);
                rs.close();
            

        }catch(SQLException ex){
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Listar = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtConcepto = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        btnActualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGastos = new javax.swing.JTable();
        cmbMetodo = new javax.swing.JComboBox<>();
        chkIVA = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dateGastos = new com.toedter.calendar.JDateChooser();
        txtTotal = new javax.swing.JTextField();
        cmbPagado = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbProveedores = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();

        Listar.setText("Listar");
        Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Listar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Tipo de gasto:");

        txtMonto.setEnabled(false);
        txtMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMontoActionPerformed(evt);
            }
        });
        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMontoKeyReleased(evt);
            }
        });

        jLabel2.setText("Concepto:");

        jLabel3.setText("Subtotal:");

        jLabel4.setText("Descripcion:");

        jLabel5.setText("$");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 204));
        jLabel9.setText("ACTUALIZACION GASTOS FIJOS O VARIABLES");

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione el tipo>", "Administración", "Venta", "Diversos" }));

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        tblGastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblGastos.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(tblGastos);

        cmbMetodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Método de pago>", "Efectivo", "Tarjeta de crédito", "Transferencia Electrónica" }));

        chkIVA.setText("IVA");
        chkIVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIVAActionPerformed(evt);
            }
        });

        jLabel6.setText("Total:");

        jLabel10.setText("Fecha:");

        txtTotal.setEnabled(false);
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalKeyReleased(evt);
            }
        });

        cmbPagado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione>", "Sí", "No" }));

        jLabel7.setText("Pagado:");

        jLabel8.setText("$");

        cmbProveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccione un Proveedor>" }));
        cmbProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProveedoresActionPerformed(evt);
            }
        });
        cmbProveedores.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbProveedoresPropertyChange(evt);
            }
        });

        jLabel11.setText("Proveedor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(61, 61, 61)
                        .addComponent(dateGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(34, 34, 34)
                        .addComponent(cmbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(180, 180, 180))
                                    .addComponent(chkIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(39, 39, 39)
                                            .addComponent(jLabel5)
                                            .addGap(30, 30, 30)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(31, 31, 31)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(33, 33, 33)
                        .addComponent(cmbPagado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cmbPagado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dateGastos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chkIVA)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int row=tblGastos.getSelectedRow();
        if(row >=0){
            String Concepto=tblGastos.getValueAt(row, 0).toString();
            String sql;
                ResultSet rs;
                Statement st;
                int PROV=0;
                int ID=0;
                String Tipo="", Descripcion="", Fecha="", Metodo="", Pagado="";
                double Monto=0.0, IVA=0.0, Total=0.0;
                sql="SELECT * FROM peleteriacid.gastos WHERE GASTOS_CONCEPTO = '"+Concepto+"';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);
                    
                    while (rs.next()){
                        ID=rs.getInt(1);
                        
                        Tipo=rs.getString(3);
                        Descripcion=rs.getString(5);
                        Monto=rs.getDouble(4);
                        IVA=rs.getDouble(6);
                        Fecha=String.valueOf(rs.getDate(7));
                        Total=rs.getDouble(8);
                        Metodo=rs.getString(9);
                        Pagado=rs.getString(10);
                    }
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(!txtConcepto.getText().equals(Concepto)){
                    Concepto=txtConcepto.getText();
                }
                if(!txtDescripcion.getText().equals(Descripcion)){
                    Descripcion=txtDescripcion.getText();
                }
                if(!txtMonto.getText().equals(String.valueOf(Monto))){
                    Monto=Double.parseDouble(txtMonto.getText());
                }
                if(!cmbTipo.getSelectedItem().toString().equals(Tipo)){
                    Tipo=cmbTipo.getSelectedItem().toString();
                }
                if(!cmbMetodo.getSelectedItem().toString().equals(Metodo)){
                    Metodo=cmbMetodo.getSelectedItem().toString();
                }
                    Format formatter = new SimpleDateFormat("yyyy-MM-dd");
                    String fecha=formatter.format(dateGastos.getDate());
                    
                
                if(!fecha.equals(Fecha)){
                    Fecha=fecha;
                }
                if(!txtTotal.getText().equals(String.valueOf(Total))){
                    Total=Double.parseDouble(txtTotal.getText());
                }
                Double iva=0.0;
                Double tot=Double.parseDouble(txtTotal.getText());
                Double mon=Double.parseDouble(txtMonto.getText());
                if(chkIVA.isSelected()){
                    iva=tot-mon;
                }else{
                    iva=0.0;
                }
                if(!iva.equals(IVA)){
                    IVA=iva;
                }
                int Proveedor=cmbProveedores.getSelectedIndex();
                String pagado=cmbPagado.getSelectedItem().toString();
                if(!pagado.equals(Pagado)){
                    Pagado=pagado;
                }
                
                int Option=JOptionPane.showOptionDialog(btnActualizar, 
                            "\n¿Es correcto?","Confirme el registro",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si","No"},"Si");
      if(Option==0){
          try{                   
                    PreparedStatement pst1=cn.prepareStatement("UPDATE peleteriacid.gastos "
                    +"SET GASTOS_CONCEPTO = '"+Concepto+"', GASTOS_MONTO = "+Monto+", GASTOS_DESCRIPCION = '"+Descripcion+"', GASTOS_TIPO = '"+Tipo
                    +"', GASTO_IVA = '"+IVA+"', GASTO_FECHA = '"+Fecha+"', GASTO_TOTAL = "+Total
                    +", GASTO_METODO = '"+Metodo+"', GASTO_PAGADO = '"+Pagado+"' WHERE GASTOS_ID = "+ID
                    +";");
                    System.out.println(pst1);
                    pst1.executeUpdate();
                }catch(SQLException ex){
                    Logger.getLogger(EditarGasto.class.getName()).log(Level.SEVERE, null, ex);

                }
                if(Proveedor!=0){
                try{                   
                    PreparedStatement pst1=cn.prepareStatement("UPDATE peleteriacid.gastos_has_proveedores "
                    +"SET PROV_ID = "+Proveedor+" WHERE GASTOS_ID = "+ID
                    +";");
                    System.out.println(pst1);
                    pst1.executeUpdate();
                }catch(SQLException ex){
                    Logger.getLogger(EditarGasto.class.getName()).log(Level.SEVERE, null, ex);

                }
                }else
                    
        
        LimpiarCampos();
        txtConcepto.setEnabled(false);
        txtMonto.setEnabled(false);
        txtDescripcion.setEnabled(false);
        cmbTipo.setEnabled(false);
        cmbMetodo.setEnabled(false);
        dateGastos.setEnabled(false);
        chkIVA.setEnabled(false);
        cmbPagado.setEnabled(false);
        Listar();
        JOptionPane.showMessageDialog(null, "La actualización fue hecha con éxito","Éxito",JOptionPane.OK_OPTION);
      }else{
          
      }
            }else{
            JOptionPane.showMessageDialog(this, "No se seleccionó ninguna fila");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarActionPerformed
        cmbProveedores.setEnabled(true);
        int row=tblGastos.getSelectedRow();
        LimpiarCampos();
        txtConcepto.setEnabled(true);
        txtMonto.setEnabled(true);
        txtDescripcion.setEnabled(true);
        cmbTipo.setEnabled(true);
        cmbMetodo.setEnabled(true);
        dateGastos.setEnabled(true);
        chkIVA.setEnabled(true);
        cmbPagado.setEnabled(true);
        String Concepto=tblGastos.getValueAt(row, 0).toString();
        String sql;
        int ID=0, PROV=0;
                ResultSet rs;
                Statement st;
                String Tipo="", Descripcion="", Fecha="", Metodo="", Pagado="";
                double Monto=0.0, IVA=0.0, Total=0.0;
                sql="SELECT GASTOS_TIPO, GASTOS_DESCRIPCION, GASTOS_MONTO, GASTO_IVA, GASTO_FECHA, GASTO_METODO, GASTO_PAGADO, GASTO_TOTAL, GASTOS_ID"
                + " FROM peleteriacid.gastos WHERE GASTOS_CONCEPTO = '"+Concepto+"';";
                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);
                    
                    while (rs.next()){
                        Tipo=rs.getString(1);
                        Descripcion=rs.getString(2);
                        Monto=rs.getDouble(3);
                        IVA=rs.getDouble(4);
                        Fecha=String.valueOf(rs.getDate(5));
                        Metodo=rs.getString(6);
                        Pagado=rs.getString(7);
                        Total=rs.getDouble(8);
                        ID=rs.getInt(9);
                        String sql1;
                        ResultSet rs1;
                        Statement st1;
                        sql1="SELECT * FROM peleteriacid.gastos_has_proveedores WHERE GASTOS_ID = "+ID+";";
                            try {
                                st1=cn.createStatement();
                                rs1=st1.executeQuery(sql1);

                                while (rs1.next()){
                                    PROV=rs1.getInt(1);
                                }
                                rs1.close();

                            }catch(SQLException ex){
                                Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                            }
                    }
                    rs.close();

                }catch(SQLException ex){
                    Logger.getLogger(ListarMateriales.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtConcepto.setText(Concepto);
                txtMonto.setText(String.valueOf(Monto));
                txtDescripcion.setText(Descripcion);
                cmbTipo.setSelectedItem(Tipo);
                cmbMetodo.setSelectedItem(Metodo);
                if(PROV==0){
                    cmbProveedores.setEnabled(false);
                }else
                cmbProveedores.setSelectedIndex(PROV);
                if(IVA!=0.0){
                    chkIVA.setSelected(true);
                }
                cmbPagado.setSelectedItem(Pagado);
                
        try {
            java.util.Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(Fecha);
            dateGastos.setDate(date1);
        } catch (ParseException ex) {
            Logger.getLogger(EditarGasto.class.getName()).log(Level.SEVERE, null, ex);
        }
                txtTotal.setText(String.format("%.2f",(Total)));
    }//GEN-LAST:event_ListarActionPerformed

    private void chkIVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIVAActionPerformed
        double total= 0.0;
        boolean[] field=new boolean[1];
        field[0]=txtTotal.getText().isEmpty();
        if(!field[0]){
            total=Double.parseDouble(txtTotal.getText());
        }
        double subtotal = 0.0;
        if(chkIVA.isSelected()==true){
            subtotal=(total)/1.16;

        }else{
            subtotal=total;
        }
        txtMonto.setText(String.format("%.2f",(subtotal)));
    }//GEN-LAST:event_chkIVAActionPerformed

    private void txtMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMontoActionPerformed
        
    }//GEN-LAST:event_txtMontoActionPerformed

    private void txtMontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyReleased
        
    }//GEN-LAST:event_txtMontoKeyReleased

    private void txtTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyReleased
        double total= Double.parseDouble(txtTotal.getText());
        
        double subtotal = 0.0;
        if(chkIVA.isSelected()==true){
            subtotal=(total)/1.16;

        }else{
            subtotal=total;
        }
        txtMonto.setText(String.format("%.2f",(subtotal)));
    }//GEN-LAST:event_txtTotalKeyReleased

    private void cmbProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProveedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProveedoresActionPerformed

    private void cmbProveedoresPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbProveedoresPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProveedoresPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarGasto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarGasto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Listar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JCheckBox chkIVA;
    private javax.swing.JComboBox<String> cmbMetodo;
    private javax.swing.JComboBox<String> cmbPagado;
    private javax.swing.JComboBox<String> cmbProveedores;
    private javax.swing.JComboBox<String> cmbTipo;
    private com.toedter.calendar.JDateChooser dateGastos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblGastos;
    private javax.swing.JTextField txtConcepto;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
Conectar cc=new Conectar();
Connection cn=cc.conexion();
}
