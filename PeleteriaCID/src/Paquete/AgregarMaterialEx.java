/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paquete;


import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gloria Alicia
 */
public class AgregarMaterialEx extends javax.swing.JFrame {

    /**
     * Creates new form AgregarMaterialEx
     */
    public AgregarMaterialEx() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        jScrollPane1.setVisible(false);
        tblContenido.setVisible(false);
        txtMedidaEspesor.setEnabled(false);
        txtMedidaLargo.setEnabled(false);
        txtMedidaAncho.setEnabled(false);
        txtModelo.setEnabled(false);
        txtColor.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtPrecio.setEnabled(false);
        txtCosto.setEnabled(false);
        txtArea.setEnabled(false);
        txtMarca.setEnabled(false);
        txtMargen.setEnabled(false);
        txtPrecio1.setEnabled(false);
        txtPrecio2.setEnabled(false);
    }
    public void LimpiarCampos(){
        txtMedidaEspesor.setText("");
        txtModelo.setText("");
        txtCantidad.setText("");
        txtPrecio.setText("");
        txtMedidaLargo.setText("");
        txtMedidaAncho.setText("");
        txtColor.setText("");
        txtCosto.setText("");
        txtCosto1.setText("");
        txtArea.setText("");
        txtMarca.setText("");
        txtMargen.setText("");
        txtPrecio1.setText("");
        txtPrecio2.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMedidaEspesor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lbModelo = new javax.swing.JLabel();
        lblLargo = new javax.swing.JLabel();
        lblAnchocm = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMedidaLargo = new javax.swing.JTextField();
        lblLargocm = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblLitros = new javax.swing.JLabel();
        lblEspesorcm = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblAncho = new javax.swing.JLabel();
        lblMedida = new javax.swing.JLabel();
        lblUnidades = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        txtMedidaAncho = new javax.swing.JTextField();
        txtCosto1 = new javax.swing.JTextField();
        lblEspesor = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContenido = new javax.swing.JTable();
        txtMargen = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtPrecio1 = new javax.swing.JTextField();
        txtPrecio2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        lblLitros1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("$");

        lbModelo.setText("Modelo:");

        lblLargo.setText("Largo:");

        lblAnchocm.setText("cm");

        lblMarca.setText("Marca:");

        jLabel2.setText("Cantidad existente:");

        lblLargocm.setText("cm");

        jLabel3.setText("Costo Unitario:");

        lblEspesorcm.setText("cm");

        lblColor.setText("Color:");

        lblAncho.setText("Ancho:");

        lblMedida.setText("Medidas:");

        lblUnidades.setText("Unidades");

        jLabel15.setText("Precio Unitario de venta al publico general:");

        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadKeyReleased(evt);
            }
        });

        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
        });

        txtCosto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostoActionPerformed(evt);
            }
        });
        txtCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCostoKeyReleased(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("$");

        txtCosto1.setEnabled(false);

        lblEspesor.setText("Espesor:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("$");

        jLabel18.setText("Costo Total:");

        jLabel5.setText("Notas:");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane2.setViewportView(txtArea);

        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        tblContenido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblContenido.setEnabled(false);
        jScrollPane1.setViewportView(tblContenido);

        txtMargen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMargenActionPerformed(evt);
            }
        });
        txtMargen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMargenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMargenKeyTyped(evt);
            }
        });

        jLabel20.setText("Margen de ganancia:");

        jLabel19.setText("Precio Unitario de venta a boleros:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setText("$");

        txtPrecio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecio1KeyReleased(evt);
            }
        });

        txtPrecio2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecio2KeyReleased(evt);
            }
        });

        jLabel22.setText("Precio Unitario de venta en mayoreo:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setText("$");

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de Material", "Agujas", "Agujetas", "Aseo", "Brochas y cepillos", "Carretes", "Cerco", "Cierres", "Clavos y tachuelas", "Correas y látigos", "Cámara de avión", "Fibras", "Grasas y ceras", "Hebillas y adornos", "Herramienta", "Hilos", "Lijas", "Pegamento", "Piel", "Pinturas", "Plantillas y taloneras", "Remaches", "Suelas", "Tacones", "Tapas y Firmes", "Tapetes", "Tintas" }));
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(lblAncho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMedidaAncho, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAnchocm)
                        .addGap(41, 41, 41)
                        .addComponent(lblLargo)
                        .addGap(2, 2, 2)
                        .addComponent(txtMedidaLargo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLargocm)
                        .addGap(32, 32, 32)
                        .addComponent(lblEspesor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMedidaEspesor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEspesorcm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiar)
                        .addGap(79, 79, 79)
                        .addComponent(btnRegistrar)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMedida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 960, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbModelo)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel22))
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblMarca)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtMarca)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(lblLitros1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblColor)
                                        .addGap(32, 32, 32)
                                        .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(17, 17, 17)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtMargen, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel20)))
                                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(218, 218, 218))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel21)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel23)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPrecio2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel3)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(129, 129, 129)
                                .addComponent(jLabel18)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblUnidades))
                                    .addComponent(txtCosto1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(301, 301, 301)
                    .addComponent(lblLitros, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(749, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbModelo))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(lblColor)
                                                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel20)
                                                    .addComponent(jLabel2)
                                                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblMarca))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtMargen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblUnidades))
                                                .addGap(16, 16, 16))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(lblLitros1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel17)
                                    .addComponent(txtCosto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(txtPrecio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPrecio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel22))
                                .addGap(20, 20, 20)
                                .addComponent(lblMedida)
                                .addGap(3, 3, 3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMedidaAncho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAnchocm)
                            .addComponent(txtMedidaLargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLargocm)
                            .addComponent(txtMedidaEspesor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLargo)
                            .addComponent(lblEspesor)
                            .addComponent(lblAncho)
                            .addComponent(lblEspesorcm)
                            .addComponent(btnRegistrar)
                            .addComponent(btnLimpiar))))
                .addGap(33, 33, 33))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(lblLitros, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(323, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyReleased
        int Cantidad=Integer.parseInt(txtCantidad.getText());
        double Costo=0.0;
        boolean[] field=new boolean[1];
        field[0]=txtCosto.getText().isEmpty();
        if(!field[0]){
            Costo=Double.parseDouble(txtCosto.getText());
        }
        txtCosto1.setText(String.format("%.2f",(Cantidad*Costo)));
    }//GEN-LAST:event_txtCantidadKeyReleased

    private void txtCostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostoActionPerformed

    }//GEN-LAST:event_txtCostoActionPerformed

    private void txtCostoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoKeyReleased
        boolean[] cant=new boolean[1];
        cant[0]=txtCosto.getText().isEmpty();
        double Costo=0;
        if(!cant[0]){
            Costo=Double.parseDouble(txtCosto.getText());

            double margen, precio;
            int Cantidad=0;
            boolean[] field=new boolean[2];
            field[0]=txtCantidad.getText().isEmpty();
            field[1]=txtMargen.getText().isEmpty();
            if(!field[0]){
                Cantidad=Integer.parseInt(txtCantidad.getText());
            }
            txtCosto1.setText(String.format("%.2f",(Cantidad*Costo)));
            if(!field[1]){
                margen=Double.parseDouble(txtMargen.getText());
                precio=Costo+margen;
                txtPrecio.setText(String.valueOf(precio));
            }
            
        }else{
            txtPrecio.setText("");
        }
        
    }//GEN-LAST:event_txtCostoKeyReleased

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        LimpiarCampos();

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
       
            int Tipo=cmbTipo.getSelectedIndex(), Cantidad=Integer.parseInt(txtCantidad.getText());
            boolean[] field = new boolean[6];
            field[0]=txtMedidaLargo.getText().isEmpty();
            field[1]=txtMedidaAncho.getText().isEmpty();
            field[2]=txtMedidaEspesor.getText().isEmpty();
            field[3]=txtArea.getText().isEmpty();
            field[4]=txtModelo.getText().isEmpty();
            field[5]=txtMarca.getText().isEmpty();
            String Notas="",Modelo="", Marca="";
            float MedidaLargo=0, MedidaAncho=0, MedidaEspesor=0;
            if(!field[0]){
                MedidaLargo=Float.parseFloat(txtMedidaLargo.getText());
            }
            if(!field[1]){
                MedidaAncho=Float.parseFloat(txtMedidaAncho.getText());
            }
            if(!field[2]){
                MedidaEspesor=Float.parseFloat(txtMedidaEspesor.getText());
            }
            if(!field[3]){
                Notas=txtArea.getText();
            }
            if(!field[4]){
                Modelo=txtModelo.getText();
            }
            if(!field[5]){
                Marca=txtMarca.getText();
            }
            double Precio=Double.parseDouble(txtPrecio.getText()), Costo=Double.parseDouble(txtCosto.getText());
            double PrecioBoleros=Double.parseDouble(txtPrecio1.getText()), PrecioMayoreo=Double.parseDouble(txtPrecio2.getText());
            String Color=txtColor.getText();
            int Option=JOptionPane.showOptionDialog(btnRegistrar, "Tipo: "+cmbTipo.getSelectedItem()
                + "\nModelo: "+Modelo
                +"\nColor: "+Color
                +"\nMedida (Ancho):"+MedidaAncho
                +"\nMedida (Largo):"+MedidaLargo
                +"\nMedida (Espesor):"+MedidaEspesor
                +"\nPrecio:"+Precio
                +"\nPrecio boleros:"+PrecioBoleros
                +"\nPrecio mayoreo:"+PrecioMayoreo
                +"\nCosto:"+Costo
                +"\nCantidad:"+Cantidad
                + "\n¿Es correcto?","Confirme el registro",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si","No"},"Si");

            if(Option==0){

                switch (Tipo){
                    case 1:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_MEDIDA_LARGO, MATERIA_MEDIDA_ANCHO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setFloat(3, MedidaLargo);
                            pst.setFloat(4, MedidaAncho);
                            pst.setString(5, Color);
                            pst.setInt(6, Cantidad);
                            pst.setDouble(7, Precio);
                            pst.setDouble(8, Costo);
                            pst.setString(9, Notas);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 2:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_MEDIDA_LARGO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setFloat(3, MedidaLargo);
                            pst.setString(4, Color);
                            pst.setInt(5, Cantidad);
                            pst.setDouble(6, Precio);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setDouble(9, PrecioBoleros);
                            pst.setDouble(10, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 13:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_MEDIDA_LARGO, MATERIA_MEDIDA_ANCHO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setFloat(3, MedidaLargo);
                            pst.setFloat(4, MedidaAncho);
                            pst.setString(5, Color);
                            pst.setInt(6, Cantidad);
                            pst.setDouble(7, Precio);
                            pst.setDouble(8, Costo);
                            pst.setString(9, Notas);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();

                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 19:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setString(8, Marca);
                            pst.setDouble(9, PrecioBoleros);
                            pst.setDouble(10, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 25:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 8:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_MEDIDA_ANCHO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setFloat(7, MedidaAncho);
                            pst.setDouble(8, Costo);
                            pst.setString(9, Notas);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 23:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setString(9, Marca);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 9:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setDouble(9, PrecioBoleros);
                            pst.setDouble(10, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 21:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setInt(3, Cantidad);
                            pst.setDouble(4, Precio);
                            pst.setFloat(5, MedidaLargo);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 22:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setString(9, Marca);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}

                    case 24:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_MEDIDA_ANCHO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setFloat(7, MedidaAncho);
                            pst.setDouble(8, Costo);
                            pst.setString(9, Notas);
                            pst.setString(10, Marca);
                            pst.setDouble(11, PrecioBoleros);
                            pst.setDouble(12, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 12:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setInt(3, Cantidad);
                            pst.setDouble(4, Precio);
                            pst.setDouble(5, Costo);
                            pst.setString(6, Notas);
                            pst.setString(7, Marca);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 26:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setString(8, Marca);
                            pst.setDouble(9, PrecioBoleros);
                            pst.setDouble(10, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 20:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setString(9, Marca);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 15:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO,  MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setString(9, Marca);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 18:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 10:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setInt(2, Cantidad);
                            pst.setDouble(3, Precio);
                            pst.setDouble(4, Costo);
                            pst.setString(5, Notas);
                            pst.setDouble(6, PrecioBoleros);
                            pst.setDouble(7, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 17:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setInt(3, Cantidad);
                            pst.setDouble(4, Precio);
                            pst.setDouble(5, Costo);
                            pst.setString(6, Notas);
                            pst.setString(7, Marca);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 7:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setDouble(9, PrecioBoleros);
                            pst.setDouble(10, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 4:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setString(9, Marca);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 11:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 14:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 6:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setDouble(8, PrecioBoleros);
                            pst.setDouble(9, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 16:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setDouble(7, Costo);
                            pst.setString(8, Notas);
                            pst.setString(9, Marca);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 5:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_MEDIDA_LARGO, MATERIA_MEDIDA_ANCHO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setFloat(6, MedidaLargo);
                            pst.setFloat(7, MedidaAncho);
                            pst.setDouble(8, Costo);
                            pst.setString(9, Notas);
                            pst.setDouble(10, PrecioBoleros);
                            pst.setDouble(11, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}
                    case 3:{
                        try{
                            PreparedStatement pst =cn.prepareStatement("INSERT INTO peleteriacid.materiales(MATERIA_TIPO, MATERIA_MODELO, MATERIA_COLOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COSTO, MATERIA_NOTAS, MATERIA_MARCA, MATERIA_PRECIO_BOLEROS, MATERIA_PRECIO_MAYOREO)"
                                +" VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");
                            pst.setString(1, cmbTipo.getSelectedItem().toString());
                            pst.setString(2, Modelo);
                            pst.setString(3, Color);
                            pst.setInt(4, Cantidad);
                            pst.setDouble(5, Precio);
                            pst.setDouble(6, Costo);
                            pst.setString(7, Notas);
                            pst.setString(8, Marca);
                            pst.setDouble(9, PrecioBoleros);
                            pst.setDouble(10, PrecioMayoreo);
                            System.out.println(pst);
                            pst.executeUpdate();
                        }catch(SQLException ex){
                            Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;}

                }
                DefaultTableModel modelo=new DefaultTableModel();
                modelo.addColumn("SKU");
                modelo.addColumn("ID");
                modelo.addColumn("Tipo");
                modelo.addColumn("Modelo");
                modelo.addColumn("Medida (Ancho)");
                modelo.addColumn("Medida (Largo)");
                modelo.addColumn("Cantidad Existente");
                modelo.addColumn("Precio");
                modelo.addColumn("Color");
                tblContenido.setModel(modelo);
                String sql;
                ResultSet rs;
                Statement st;
                String[] datos=new String[10];
                sql="SELECT MATERIA_SKU,MATERIA_ID, MATERIA_TIPO, MATERIA_MODELO, MATERIA_MEDIDA_ANCHO,"
                + " MATERIA_MEDIDA_LARGO, MATERIA_MEDIDA_ESPESOR, MATERIA_CANTIDAD, MATERIA_PRECIO, MATERIA_COLOR"
                + " FROM peleteriacid.materiales ORDER BY MATERIA_ID DESC;";

                try {
                    st=cn.createStatement();
                    rs=st.executeQuery(sql);
                    System.out.println(sql);

                    while (rs.next()){
                        datos[0]=rs.getString(1);
                        datos[1]=Integer.toString(rs.getInt(2));
                        datos[2]=rs.getString(3);
                        datos[3]=rs.getString(4);
                        datos[4]=Float.toString(rs.getFloat(5));
                        datos[5]=Float.toString(rs.getFloat(6));
                        datos[6]=Float.toString(rs.getFloat(7));
                        datos[7]=Integer.toString(rs.getInt(8));
                        datos[8]=Double.toString(rs.getDouble(9));
                        datos[9]=rs.getString(10);

                        modelo.addRow(datos);
                    }

                    tblContenido.setModel(modelo);
                    rs.close();
                }catch(SQLException ex){
                    Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                }
                int relacion=Integer.parseInt(tblContenido.getValueAt(0, 1).toString());
                try {

                    String Prefijo="", SKU="", Ceros="";
                    if (relacion<10){
                        Ceros="000";
                    }else if(relacion<100){
                        Ceros="00";
                    }else if(relacion<1000){
                        Ceros="0";
                    }else

                    System.out.println(Ceros);
                    switch (cmbTipo.getSelectedIndex()){
                        case 1:{
                            Prefijo="AGU";
                            break;
                        }
                        case 2:{
                            Prefijo="AGJ";
                            break;
                        }
                        case 13:{
                            Prefijo="HEB";
                            break;
                        }
                        case 19:{
                            Prefijo="PIN";
                            break;
                        }
                        case 25:{
                            Prefijo="TAP";
                            //Tapetes y laminas
                            break;
                        }
                        case 8:{
                            Prefijo="CLA";
                            //Clavos y tachuelas
                            break;
                        }
                        case 23:{
                            Prefijo="TAC";
                            //Tacones
                            break;
                        }
                        case 9:{
                            Prefijo="COR";
                            //Correas y latigos
                            break;
                        }
                        case 21:{
                            Prefijo="REM";
                            //Remaches
                            break;
                        }
                        case 22:{
                            Prefijo="SUE";
                            //Suelas
                            break;
                        }
                        case 24:{
                            Prefijo="TPS";
                            //Tapas y firmes
                            break;
                        }
                        case 12:{
                            Prefijo="GRA";
                            //Grasas, ceras
                            break;
                        }
                        case 26:{
                            Prefijo="TIN";
                            //Tintas
                            break;
                        }
                        case 20:{
                            Prefijo="PLA";
                            //Plantillas y taloneras
                            break;
                        }
                        case 15:{
                            Prefijo="HIL";
                            //Hilos
                            break;
                        }
                        case 18:{
                            Prefijo="PIE";
                            //Piel
                            break;
                        }
                        case 10:{
                            Prefijo="AVI";
                            //Camara de avion
                            break;
                        }
                        case 17:{
                            Prefijo="PEG";
                            //Pegamento
                            break;
                        }
                        case 7:{
                            Prefijo="CIE";
                            //Cierres
                            break;
                        }
                        case 4:{
                            Prefijo="BRO";
                            //Brochas y cepillos
                            break;
                        }
                        case 11:{
                            Prefijo="FIB";
                            //Fibras
                            break;
                        }
                        case 14:{
                            Prefijo="HER";
                            //Eva y hulespuma, cuchillos
                            break;
                        }
                        case 6:{
                            Prefijo="CER";
                            //Cerco
                            break;
                        }
                        case 16:{
                            Prefijo="LIJ";
                            //Lijas
                            break;
                        }
                        case 5:{
                            Prefijo="CAR";
                            //Carretes
                            break;
                        }
                        case 3:{
                            Prefijo="ASE";
                            //Limpiadores, jabones y champu
                            break;
                        }
                    }

                    System.out.println(Prefijo);
                    SKU=Prefijo+Ceros+relacion;
                    System.out.println(SKU);
                    PreparedStatement pst1=cn.prepareStatement("UPDATE peleteriacid.materiales "
                        + "SET MATERIA_SKU = '"+SKU+"' WHERE MATERIA_ID = "+relacion+";");
                    System.out.println(pst1);
                    pst1.executeUpdate();
                    //pst.executeUpdate();
                }catch(SQLException ex){
                    Logger.getLogger(AgregarMaterial.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "El registro fue hecho con exito","Éxito",JOptionPane.OK_OPTION);
                LimpiarCampos();
            }
            else{

            }
        
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtMargenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMargenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMargenActionPerformed

    private void txtMargenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMargenKeyReleased
        boolean[] mangin=new boolean[1];
        mangin[0]=txtMargen.getText().isEmpty();
        double margen=0.0;
        if(!mangin[0]){
            margen=Double.parseDouble(txtMargen.getText());

            double Costo=0.0;
            double Precio=0.0;
            boolean[] field=new boolean[2];
            field[0]=txtCosto.getText().isEmpty();
            field[1]=txtPrecio.getText().isEmpty();
            if(!field[0]){
                Costo=Double.parseDouble(txtCosto.getText());

                Precio=margen+Costo;
                txtPrecio.setText(String.valueOf(Precio));
            }
        }else{
            txtPrecio.setText("");
        }
    }//GEN-LAST:event_txtMargenKeyReleased

    private void txtMargenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMargenKeyTyped

    }//GEN-LAST:event_txtMargenKeyTyped

    private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
        boolean[] price=new boolean[1];
        price[0]=txtPrecio.getText().isEmpty();
        double Precio=0.0;
        if(!price[0]){
        Precio=Double.parseDouble(txtPrecio.getText());
        
        double Costo=0.0;
        double Margen=0.0;
        boolean[] field=new boolean[1];
        field[0]=txtCosto.getText().isEmpty();
            if(!field[0]){
                Costo=Double.parseDouble(txtCosto.getText());

            Margen=Precio-Costo;
            txtMargen.setText(String.valueOf(Margen));
            }
        }else {
            txtMargen.setText("");
        }   
    }//GEN-LAST:event_txtPrecioKeyReleased

    private void txtPrecio1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecio1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecio1KeyReleased

    private void txtPrecio2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecio2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecio2KeyReleased

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        LimpiarCampos();
        lblColor.setVisible(true);
        txtColor.setVisible(true);
        txtMarca.setEnabled(true);
        txtArea.setEnabled(true);
        lblUnidades.setText("Unidades");
        tblContenido.setVisible(false);
        lbModelo.setText("Modelo:");
        lblLitros.setText("");
        txtMedidaEspesor.setVisible(true);
        lblEspesor.setVisible(true);
        lblEspesorcm.setVisible(true);
        txtMedidaAncho.setVisible(true);
        lblAncho.setVisible(true);
        lblLargo.setText("Largo:");
        lblAnchocm.setVisible(true);
        txtMedidaLargo.setVisible(true);
        lblLargo.setVisible(true);
        lblLargocm.setVisible(true);
        lblMarca.setVisible(true);
        txtMarca.setVisible(true);
        lblMedida.setVisible(true);

        txtMedidaEspesor.setEnabled(true);
        txtMedidaLargo.setEnabled(true);
        txtMedidaAncho.setEnabled(true);
        txtModelo.setEnabled(true);
        txtColor.setEnabled(true);
        txtCantidad.setEnabled(true);
        txtPrecio.setEnabled(true);
        txtCosto.setEnabled(true);
        txtMargen.setEnabled(true);
        txtPrecio1.setEnabled(true);
        txtPrecio2.setEnabled(true);
        int Tipo=cmbTipo.getSelectedIndex();
        switch (Tipo){
            case 1:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                lblColor.setVisible(false);
                txtColor.setVisible(false);
                break;
            }
            case 2:{
                lblUnidades.setText("Pares");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 13:{
                txtMedidaEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                lblEspesor.setVisible(false);
                break;
            }
            case 19:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                lbModelo.setText("Contenido:");
                lblLitros.setText("Litros");
                break;
            }
            case 25:{
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                break;
            }
            case 8:{
                lblUnidades.setText("Kilos");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                break;
            }
            case 23:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 9:{
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 21:{
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                lblColor.setVisible(false);
                txtColor.setVisible(false);
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 22:{
                lblUnidades.setText("Pares");
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblLargo.setText("Numero:");
                lblAnchocm.setVisible(false);
                break;
            }
            case 24:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                break;
            }
            case 12:{
                lbModelo.setText("Tipo:");
                lblColor.setVisible(false);
                txtColor.setVisible(false);
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                lbModelo.setText("Contenido:");
                lblLitros.setText("Litros");
                break;
            }
            case 26:{
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                lbModelo.setText("Contenido:");
                lblLitros.setText("Litros");
                break;
            }
            case 20:{
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 15:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 18:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                break;
            }
            case 10:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                txtModelo.setVisible(false);
                lbModelo.setVisible(false);
                txtColor.setVisible(false);
                lblColor.setVisible(false);
                break;
            }
            case 17:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lblMedida.setVisible(false);
                lbModelo.setText("Contenido:");
                txtColor.setVisible(false);
                lblColor.setVisible(false);
                lblLitros.setText("Litros");
                break;
            }
            case 7:{
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);

                break;
            }
            case 4:{
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 11:{
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lbModelo.setText("Tipo:");
                lblMedida.setVisible(false);
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                break;
            }
            case 14:{
                lblMedida.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                break;
            }
            case 6:{
                lblMedida.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                lblMarca.setVisible(false);
                txtMarca.setVisible(false);
                break;
            }
            case 16:{
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            case 5:{
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);

                break;
            }
            case 3:{
                lblMedida.setVisible(false);
                txtMedidaLargo.setVisible(false);
                lblLargo.setVisible(false);
                lblLargocm.setVisible(false);
                lbModelo.setText("Tipo:");
                txtMedidaEspesor.setVisible(false);
                lblEspesor.setVisible(false);
                lblEspesorcm.setVisible(false);
                txtMedidaAncho.setVisible(false);
                lblAncho.setVisible(false);
                lblAnchocm.setVisible(false);
                break;
            }
            default:{
                txtMedidaEspesor.setEnabled(false);
                txtMedidaLargo.setEnabled(false);
                txtMedidaAncho.setEnabled(false);
                txtModelo.setEnabled(false);
                txtColor.setEnabled(false);
                txtCantidad.setEnabled(false);
                txtPrecio.setEnabled(false);
                txtCosto.setEnabled(false);
                txtArea.setEnabled(false);
                txtMarca.setEnabled(false);
                txtMargen.setEnabled(false);
                txtPrecio1.setEnabled(false);
                txtPrecio2.setEnabled(false);
                break;
            }
        }
    }//GEN-LAST:event_cmbTipoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarMaterialEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarMaterialEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarMaterialEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarMaterialEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarMaterialEx().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbModelo;
    private javax.swing.JLabel lblAncho;
    private javax.swing.JLabel lblAnchocm;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblEspesor;
    private javax.swing.JLabel lblEspesorcm;
    private javax.swing.JLabel lblLargo;
    private javax.swing.JLabel lblLargocm;
    private javax.swing.JLabel lblLitros;
    private javax.swing.JLabel lblLitros1;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblMedida;
    private javax.swing.JLabel lblUnidades;
    private javax.swing.JTable tblContenido;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtCosto1;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMargen;
    private javax.swing.JTextField txtMedidaAncho;
    private javax.swing.JTextField txtMedidaEspesor;
    private javax.swing.JTextField txtMedidaLargo;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtPrecio1;
    private javax.swing.JTextField txtPrecio2;
    // End of variables declaration//GEN-END:variables
Conectar cc=new Conectar();
Connection cn=cc.conexion();
}
